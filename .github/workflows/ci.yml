# https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  cache-version: v20200524
  YARN_CACHE: 'true'

jobs:
  yarn-install:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-10.15
          # - windows-2019
        node-version:
          - 14.x
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
        if: env.YARN_CACHE == 'true'

      - uses: actions/setup-node@v2
        if: env.YARN_CACHE == 'true'
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn offline cache
        uses: actions/cache@v2
        id: yarn-offline-cache
        if: env.YARN_CACHE == 'true'
        with:
          path: ~/yarn-offline-cache
          key: ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-

      - name: Install packages
        if: env.YARN_CACHE == 'true'
        run: |
          yarn config set yarn-offline-mirror ./yarn-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ matrix.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull

  lint:
    needs: yarn-install
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 14.x
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Yarn offline cache
        uses: actions/cache@v2
        id: yarn-offline-cache
        if: env.YARN_CACHE == 'true'
        with:
          path: ~/yarn-offline-cache
          key: ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-
      - name: Install packages
        run: |
          yarn config set yarn-offline-mirror ./yarn-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - run: yarn lint
        continue-on-error: false

  unit-test:
    needs: yarn-install
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-10.15
          # - windows-2019
        node-version:
          - 14.x
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Yarn offline cache
        uses: actions/cache@v2
        id: yarn-offline-cache
        if: env.YARN_CACHE == 'true'
        with:
          path: ~/yarn-offline-cache
          key: ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-
      - name: Install packages
        run: |
          yarn config set yarn-offline-mirror ./yarn-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - run: yarn test:unit

  e2e-test:
    needs: yarn-install
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-10.15
          # - windows-2019
        node-version:
          - 14.x
        browser:
          - chrome
          # - edge
        exclude:
          - os: ubuntu-latest
            browser: edge
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn offline cache
        uses: actions/cache@v2
        id: yarn-offline-cache
        if: env.YARN_CACHE == 'true'
        with:
          path: ~/yarn-offline-cache
          key: ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ matrix.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - name: Git LFS Pull
        run: git lfs pull

      - name: Install packages
        run: |
          yarn config set yarn-offline-mirror ./yarn-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - run: yarn build
      - run: yarn cypress info
      - run: yarn start-test start 3001 "cypress run"

      - name: Upload snapshots
        uses: actions/upload-artifact@v2
        with:
          name: snapshots-${{ matrix.os }}-${{ matrix.browser }}
          path: tests/e2e/snapshots

  lighthouse-test:
    needs: yarn-install
    if: 'false' # disable this action, because we should do it like here: https://github.com/treosh/lighthouse-ci-action at "Integrate Lighthouse CI with Netlify"
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 14.x
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Yarn offline cache
        uses: actions/cache@v2
        id: yarn-offline-cache
        if: env.YARN_CACHE == 'true'
        with:
          path: ~/yarn-offline-cache
          key: ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ env.cache-version }}-yarn-${{ matrix.os }}-${{ matrix.node-version }}-
      - name: Install packages
        run: |
          yarn config set yarn-offline-mirror ./yarn-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - run: yarn build
      - uses: treosh/lighthouse-ci-action@v3
        with:
          uploadArtifacts: true
          temporaryPublicStorage: false
          configPath: './lighthouserc.json'
